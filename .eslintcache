[{"D:\\frontend\\movlix\\src\\index.js":"1","D:\\frontend\\movlix\\src\\reportWebVitals.js":"2","D:\\frontend\\movlix\\src\\App.js":"3","D:\\frontend\\movlix\\src\\components\\NavBar.js":"4","D:\\frontend\\movlix\\src\\components\\MovieCard.js":"5","D:\\frontend\\movlix\\src\\components\\Paginate.js":"6","D:\\frontend\\movlix\\src\\pages\\MoviesList.js":"7","D:\\frontend\\movlix\\src\\pages\\MoviesDetail.js":"8","D:\\frontend\\movlix\\src\\pages\\MoviePurchased.js":"9"},{"size":493,"mtime":1612358742711,"results":"10","hashOfConfig":"11"},{"size":356,"mtime":1612358742711,"results":"12","hashOfConfig":"11"},{"size":729,"mtime":1612444572483,"results":"13","hashOfConfig":"11"},{"size":859,"mtime":1612444195478,"results":"14","hashOfConfig":"11"},{"size":907,"mtime":1612426229143,"results":"15","hashOfConfig":"11"},{"size":541,"mtime":1612420729797,"results":"16","hashOfConfig":"11"},{"size":1896,"mtime":1612444257924,"results":"17","hashOfConfig":"11"},{"size":6368,"mtime":1612443627046,"results":"18","hashOfConfig":"11"},{"size":743,"mtime":1612445252915,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"agxbci",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\frontend\\movlix\\src\\index.js",[],["40","41"],"D:\\frontend\\movlix\\src\\reportWebVitals.js",[],"D:\\frontend\\movlix\\src\\App.js",[],"D:\\frontend\\movlix\\src\\components\\NavBar.js",[],"D:\\frontend\\movlix\\src\\components\\MovieCard.js",[],"D:\\frontend\\movlix\\src\\components\\Paginate.js",[],"D:\\frontend\\movlix\\src\\pages\\MoviesList.js",[],"D:\\frontend\\movlix\\src\\pages\\MoviesDetail.js",["42"],"import React from 'react'\nimport axios from 'axios'\nimport MovieCard from '../components/MovieCard'\nimport { Link } from 'react-router'\n\nclass MoviesDetail extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      movie: [],\n      casts: [],\n      similar: [],\n      recommendations: [],\n      id: this.props.match.params.id,\n    }\n    this.getMovieDetail = this.getMovieDetail.bind(this)\n    this.getMovieCast = this.getMovieCast.bind(this)\n    this.getSimilarMovie = this.getSimilarMovie.bind(this)\n    this.getRecommendationsMovie = this.getRecommendationsMovie.bind(this)\n    this.getPrice = this.getPrice.bind(this)\n    this.buyMovie = this.buyMovie.bind(this)\n    this.checkPurchased = this.checkPurchased.bind(this)\n  }\n\n  componentDidMount() {\n    this.getMovieDetail()\n    this.getMovieCast()\n    this.getSimilarMovie()\n    this.getRecommendationsMovie()\n  }\n  getMovieDetail() {\n    axios\n      .get('https://api.themoviedb.org/3/movie/' + this.state.id, {\n        params: {\n          api_key: '9610ac956926261edceb5904e2ec6d17',\n          region: 'ID',\n        },\n      })\n      .then((res) => {\n        const movie = res.data\n        this.setState({ movie })\n      })\n  }\n  getMovieCast() {\n    axios\n      .get('https://api.themoviedb.org/3/movie/' + this.state.id + '/credits', {\n        params: {\n          api_key: '9610ac956926261edceb5904e2ec6d17',\n          region: 'ID',\n        },\n      })\n      .then((res) => {\n        const casts = res.data.cast\n        this.setState({ casts })\n      })\n  }\n  getSimilarMovie() {\n    axios\n      .get('https://api.themoviedb.org/3/movie/' + this.state.id + '/similar', {\n        params: {\n          api_key: '9610ac956926261edceb5904e2ec6d17',\n          region: 'ID',\n          page: 1,\n        },\n      })\n      .then((res) => {\n        const similar = res.data.results\n        this.setState({ similar })\n      })\n  }\n  getRecommendationsMovie() {\n    axios\n      .get('https://api.themoviedb.org/3/movie/' + this.state.id + '/recommendations', {\n        params: {\n          api_key: '9610ac956926261edceb5904e2ec6d17',\n          region: 'ID',\n          page: 1,\n        },\n      })\n      .then((res) => {\n        const recommendations = res.data.results\n        this.setState({ recommendations })\n      })\n  }\n  convertArrayToString(arr) {\n    return Array.prototype.map\n      .call(arr, function (item) {\n        return item.name\n      })\n      .join(', ')\n  }\n  getPrice(rating) {\n    var price = 0\n    var intRating = parseInt(rating)\n    if (rating >= 1 && intRating < 3) {\n      price = 3500\n    } else if (intRating >= 3 && intRating < 6) {\n      price = 8250\n    } else if (intRating >= 6 && intRating < 8) {\n      price = 16350\n    } else if (intRating >= 8 && intRating < 10) {\n      price = 21250\n    }\n    return price\n  }\n  buyMovie() {\n    var budget = parseInt(localStorage.getItem('budget'))\n    var price = parseInt(this.getPrice(this.state.movie.vote_average))\n    var subs = budget - price\n    console.log(subs)\n    if (price <= budget) {\n      localStorage.setItem('budget', subs)\n      var arrayMoviePurchased = JSON.parse(localStorage.getItem('movie'))\n      if (!arrayMoviePurchased) arrayMoviePurchased = []\n      var moviePurchased = {\n        id: this.state.movie.id,\n        name: this.state.movie.original_title,\n        price: price,\n      }\n      arrayMoviePurchased.push(moviePurchased)\n      console.log(arrayMoviePurchased)\n      localStorage.setItem('movie', JSON.stringify(arrayMoviePurchased))\n      window.location.reload()\n    }\n  }\n  checkPurchased() {\n    var arrayMoviePurchased = JSON.parse(localStorage.getItem('movie'))\n    var purchased = false\n    if (arrayMoviePurchased) {\n      arrayMoviePurchased.forEach((element) => {\n        if (element.id === this.state.movie.id) purchased = true\n      })\n    }\n    return purchased\n  }\n  render() {\n    const image_api = 'https://image.tmdb.org/t/p/w300/'\n    return (\n      <div>\n        <div className=\"container mt-5\">\n          <div className=\"row\">\n            <div className=\"col-3\">\n              <img\n                src={image_api + this.state.movie.poster_path}\n                alt={this.state.movie.original_title}\n                className=\"card-img-top\"\n              />\n              {this.checkPurchased() ? (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary btn-lg btn-block col-12\"\n                  disabled\n                >\n                  Sudah\n                </button>\n              ) : (\n                <button\n                  type=\"button\"\n                  onClick={this.buyMovie}\n                  className=\"btn btn-primary btn-lg btn-block col-12\"\n                >\n                  Beli Film\n                </button>\n              )}\n            </div>\n            <div className=\"col-9\">\n              <h2>{this.state.movie.original_title}</h2>\n              {this.state.movie.genres === undefined ? null : (\n                <p>Genre Film: {this.convertArrayToString(this.state.movie.genres)}</p>\n              )}\n              {this.state.casts === undefined ? null : (\n                <p>Casts : {this.convertArrayToString(this.state.casts)}</p>\n              )}\n              <p>Rating : {this.state.movie.vote_average}</p>\n              {this.state.movie.vote_average === undefined ? null : (\n                <p>Harga : Rp.{this.getPrice(this.state.movie.vote_average)}</p>\n              )}\n              <h4>Sinopsis</h4>\n              <p>{this.state.movie.overview}</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"container mt-4\">\n          <h2>Film Serupa</h2>\n          <div className=\"row row-cols-1 row-cols-md-6 g-4 pt-3\">\n            {this.state.similar.map((movie) => (\n              <div className=\"col\" key={movie.id}>\n                <MovieCard movie={movie} />\n              </div>\n            ))}\n          </div>\n        </div>\n        <div className=\"container mt-4\">\n          <h2>Rekomendasi Film</h2>\n          <div className=\"row row-cols-1 row-cols-md-6 g-4 pt-3\">\n            {this.state.recommendations.map((movie) => (\n              <div className=\"col\" key={movie.id}>\n                <MovieCard movie={movie} />\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default MoviesDetail\n","D:\\frontend\\movlix\\src\\pages\\MoviePurchased.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":4,"column":10,"nodeType":"49","messageId":"50","endLine":4,"endColumn":14},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]